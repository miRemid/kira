syntax = "proto3";

package kira.micro.service.file;

option go_package = ".;pb";

import "proto/common.proto";

message File {
    string fileID = 1;
    string fileName = 2;
    int64 fileSize = 3;
    string fileExt = 4;
    string fileHash = 5;
    string fileURL = 6;
    string delURL = 7;
    string fileWidth = 8;
    string fileHeight = 9;
}

message TokenUserReq {
    string userid = 1;
}

message TokenReq {
    string token = 1;
}

message TokenUserRes {
    bool succ = 1;
    string msg = 2;
    string token = 3;
}

message GetHistoryReq {
    //@inject_tag: form:"token"
    string token = 1;
    int64 offset = 2;
    int64 limit = 3;
}

message GetHistoryRes {
    int64 total = 1;
    repeated File files = 2;
    bool succ = 3;
    string msg = 4;
}

message DeleteFileReq {
    //@inject_tag: form:"token"
    string token = 1;
    //@inject_tag: form:"file_id"
    string fileID = 2;
}

message DeleteFileRes {
    bool succ = 1;
    string msg = 2;
}

message GetDetailReq {
    string fileID = 1;
}

message GetDetailRes {
    bool succ = 1;
    string msg = 2;
    File file = 3;
}


message GetImageReq {
    string fileID = 1;
    string width = 2;
    string height = 3;
}

message GetImageRes {
    bool succ = 1;
    string msg = 2;
    string fileExt = 3;
    string fileName = 4;
    bytes image = 5;
}

message ChangeTokenStatusReq {
    string userid = 1;
    int64 status = 2;
}

message ChangeTokenStatusRes {
    bool succ = 1;
    string msg = 2;
}

message CheckTokenStatusReq {
    string token = 1;
}

message CheckTokenStatusRes {
    int64 status = 1;
    bool succ = 2;
    string msg = 3;
}

service FileService {
    // RPC
    rpc GenerateToken(TokenUserReq) returns (TokenUserRes);
    rpc GetToken(TokenUserReq) returns (TokenUserRes);

    // API
    rpc GetHistory(GetHistoryReq) returns(GetHistoryRes);
    rpc DeleteFile(DeleteFileReq) returns(DeleteFileRes);
    rpc GetDetail(GetDetailReq) returns (GetDetailRes);
    rpc RefreshToken(TokenReq) returns (TokenUserRes);

    rpc GetImage(GetImageReq) returns(GetImageRes);

    rpc Ping(kira.micro.common.Ping) returns (kira.micro.common.Pong) {};
    rpc ChangeTokenStatus(ChangeTokenStatusReq) returns (ChangeTokenStatusRes) {};
    rpc CheckTokenStatus(CheckTokenStatusReq) returns (CheckTokenStatusRes) {};
}