// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.5
// source: proto/file.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: gorm:"column:user_name"
	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty" gorm:"column:user_name"`
	//@inject_tag: gorm:"column:file_name"
	FileName string `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty" gorm:"column:file_name"`
	FileURL  string `protobuf:"bytes,3,opt,name=fileURL,proto3" json:"fileURL,omitempty"`
	//@inject_tag: gorm:"column:file_width"
	Width string `protobuf:"bytes,4,opt,name=width,proto3" json:"width,omitempty" gorm:"column:file_width"`
	//@inject_tag: gorm:"column:file_height"
	Height string `protobuf:"bytes,5,opt,name=height,proto3" json:"height,omitempty" gorm:"column:file_height"`
	//@inject_tag: gorm:"column:file_id"
	FileID string `protobuf:"bytes,6,opt,name=fileID,proto3" json:"fileID,omitempty" gorm:"column:file_id"`
	//@inject_tag: gorm:"-" json:"likes"
	Likes int64 `protobuf:"varint,7,opt,name=likes,proto3" json:"likes" gorm:"-"`
	//@inject_tag: gorm:"-" json:"liked"
	Liked bool `protobuf:"varint,8,opt,name=liked,proto3" json:"liked" gorm:"-"`
	//@inject_tag: gorm:"file_size"
	FileSize int64 `protobuf:"varint,9,opt,name=fileSize,proto3" json:"fileSize,omitempty" gorm:"file_size"`
	//@inject_tag: gorm:"file_ext"
	Ext string `protobuf:"bytes,10,opt,name=ext,proto3" json:"ext,omitempty" gorm:"file_ext"`
	//@inject_tag: gorm:"file_hash"
	Hash string `protobuf:"bytes,11,opt,name=hash,proto3" json:"hash,omitempty" gorm:"file_hash"`
}

func (x *UserFile) Reset() {
	*x = UserFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFile) ProtoMessage() {}

func (x *UserFile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFile.ProtoReflect.Descriptor instead.
func (*UserFile) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{0}
}

func (x *UserFile) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UserFile) GetFileURL() string {
	if x != nil {
		return x.FileURL
	}
	return ""
}

func (x *UserFile) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *UserFile) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *UserFile) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

func (x *UserFile) GetLikes() int64 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *UserFile) GetLiked() bool {
	if x != nil {
		return x.Liked
	}
	return false
}

func (x *UserFile) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UserFile) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *UserFile) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type TokenUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid   string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *TokenUserReq) Reset() {
	*x = TokenUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenUserReq) ProtoMessage() {}

func (x *TokenUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenUserReq.ProtoReflect.Descriptor instead.
func (*TokenUserReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{1}
}

func (x *TokenUserReq) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *TokenUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type TokenUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succ  bool   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TokenUserRes) Reset() {
	*x = TokenUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenUserRes) ProtoMessage() {}

func (x *TokenUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenUserRes.ProtoReflect.Descriptor instead.
func (*TokenUserRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{2}
}

func (x *TokenUserRes) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *TokenUserRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TokenUserRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type TokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TokenReq) Reset() {
	*x = TokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenReq) ProtoMessage() {}

func (x *TokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenReq.ProtoReflect.Descriptor instead.
func (*TokenReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{3}
}

func (x *TokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: form:"token"
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty" form:"token"`
	//@inject_tag: form:"offset"
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty" form:"offset"`
	//@inject_tag: form:"limit"
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty" form:"limit"`
}

func (x *GetHistoryReq) Reset() {
	*x = GetHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryReq) ProtoMessage() {}

func (x *GetHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryReq.ProtoReflect.Descriptor instead.
func (*GetHistoryReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{4}
}

func (x *GetHistoryReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetHistoryReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetHistoryReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetHistoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Files []*UserFile `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	Succ  bool        `protobuf:"varint,3,opt,name=succ,proto3" json:"succ,omitempty"`
	Msg   string      `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *GetHistoryRes) Reset() {
	*x = GetHistoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRes) ProtoMessage() {}

func (x *GetHistoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRes.ProtoReflect.Descriptor instead.
func (*GetHistoryRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{5}
}

func (x *GetHistoryRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetHistoryRes) GetFiles() []*UserFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetHistoryRes) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *GetHistoryRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: form:"token"
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty" form:"token"`
	//@inject_tag: form:"file_id"
	FileID string `protobuf:"bytes,2,opt,name=fileID,proto3" json:"fileID,omitempty" form:"file_id"`
}

func (x *DeleteFileReq) Reset() {
	*x = DeleteFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileReq) ProtoMessage() {}

func (x *DeleteFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileReq.ProtoReflect.Descriptor instead.
func (*DeleteFileReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteFileReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DeleteFileReq) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

type DeleteFileRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succ bool   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteFileRes) Reset() {
	*x = DeleteFileRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRes) ProtoMessage() {}

func (x *DeleteFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRes.ProtoReflect.Descriptor instead.
func (*DeleteFileRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteFileRes) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *DeleteFileRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID string `protobuf:"bytes,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
}

func (x *GetDetailReq) Reset() {
	*x = GetDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailReq) ProtoMessage() {}

func (x *GetDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailReq.ProtoReflect.Descriptor instead.
func (*GetDetailReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{8}
}

func (x *GetDetailReq) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

type GetDetailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succ bool      `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	File *UserFile `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *GetDetailRes) Reset() {
	*x = GetDetailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailRes) ProtoMessage() {}

func (x *GetDetailRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailRes.ProtoReflect.Descriptor instead.
func (*GetDetailRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{9}
}

func (x *GetDetailRes) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *GetDetailRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDetailRes) GetFile() *UserFile {
	if x != nil {
		return x.File
	}
	return nil
}

type GetImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: form:"id" binding:"required"
	FileID string `protobuf:"bytes,1,opt,name=fileID,proto3" json:"fileID,omitempty" form:"id" binding:"required"`
	//@inject_tag: form:"width"
	Width int64 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty" form:"width"`
	//@inject_tag: form:"height"
	Height int64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty" form:"height"`
	//@inject_tag: form:"gray"
	Gray bool `protobuf:"varint,4,opt,name=gray,proto3" json:"gray,omitempty" form:"gray"`
	//@inject_tag: form:"blur"
	Blur bool `protobuf:"varint,5,opt,name=blur,proto3" json:"blur,omitempty" form:"blur"`
	//@inject_tag: form:"seed"
	BlurSeed int64 `protobuf:"varint,6,opt,name=blurSeed,proto3" json:"blurSeed,omitempty" form:"seed"`
	//@inject_tag: form:"binary"
	Binary bool `protobuf:"varint,7,opt,name=binary,proto3" json:"binary,omitempty" form:"binary"`
	//@inject_tag: form:"th"
	Threshold int64 `protobuf:"varint,8,opt,name=threshold,proto3" json:"threshold,omitempty" form:"th"`
}

func (x *GetImageReq) Reset() {
	*x = GetImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageReq) ProtoMessage() {}

func (x *GetImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageReq.ProtoReflect.Descriptor instead.
func (*GetImageReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{10}
}

func (x *GetImageReq) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

func (x *GetImageReq) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GetImageReq) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetImageReq) GetGray() bool {
	if x != nil {
		return x.Gray
	}
	return false
}

func (x *GetImageReq) GetBlur() bool {
	if x != nil {
		return x.Blur
	}
	return false
}

func (x *GetImageReq) GetBlurSeed() int64 {
	if x != nil {
		return x.BlurSeed
	}
	return 0
}

func (x *GetImageReq) GetBinary() bool {
	if x != nil {
		return x.Binary
	}
	return false
}

func (x *GetImageReq) GetThreshold() int64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type GetImageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succ     bool   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	FileExt  string `protobuf:"bytes,3,opt,name=fileExt,proto3" json:"fileExt,omitempty"`
	FileName string `protobuf:"bytes,4,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Image    []byte `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *GetImageRes) Reset() {
	*x = GetImageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageRes) ProtoMessage() {}

func (x *GetImageRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageRes.ProtoReflect.Descriptor instead.
func (*GetImageRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{11}
}

func (x *GetImageRes) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *GetImageRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetImageRes) GetFileExt() string {
	if x != nil {
		return x.FileExt
	}
	return ""
}

func (x *GetImageRes) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *GetImageRes) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

// Admin RPCs
type ChangeTokenStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Status int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChangeTokenStatusReq) Reset() {
	*x = ChangeTokenStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTokenStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTokenStatusReq) ProtoMessage() {}

func (x *ChangeTokenStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTokenStatusReq.ProtoReflect.Descriptor instead.
func (*ChangeTokenStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{12}
}

func (x *ChangeTokenStatusReq) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *ChangeTokenStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ChangeTokenStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succ bool   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ChangeTokenStatusRes) Reset() {
	*x = ChangeTokenStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTokenStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTokenStatusRes) ProtoMessage() {}

func (x *ChangeTokenStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTokenStatusRes.ProtoReflect.Descriptor instead.
func (*ChangeTokenStatusRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{13}
}

func (x *ChangeTokenStatusRes) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *ChangeTokenStatusRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CheckTokenStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CheckTokenStatusReq) Reset() {
	*x = CheckTokenStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTokenStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTokenStatusReq) ProtoMessage() {}

func (x *CheckTokenStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTokenStatusReq.ProtoReflect.Descriptor instead.
func (*CheckTokenStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{14}
}

func (x *CheckTokenStatusReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CheckTokenStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Succ   bool   `protobuf:"varint,2,opt,name=succ,proto3" json:"succ,omitempty"`
	Msg    string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CheckTokenStatusRes) Reset() {
	*x = CheckTokenStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTokenStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTokenStatusRes) ProtoMessage() {}

func (x *CheckTokenStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTokenStatusRes.ProtoReflect.Descriptor instead.
func (*CheckTokenStatusRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{15}
}

func (x *CheckTokenStatusRes) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CheckTokenStatusRes) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *CheckTokenStatusRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// Normal RPCs
type GetUserImagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	//@inject_tag: form:"offset"
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty" form:"offset"`
	//@inject_tag: form:"limit"
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty" form:"limit"`
	//@inject_tag: form:"desc"
	Desc  bool   `protobuf:"varint,4,opt,name=desc,proto3" json:"desc,omitempty" form:"desc"`
	Token string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetUserImagesReq) Reset() {
	*x = GetUserImagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserImagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserImagesReq) ProtoMessage() {}

func (x *GetUserImagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserImagesReq.ProtoReflect.Descriptor instead.
func (*GetUserImagesReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserImagesReq) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *GetUserImagesReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUserImagesReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserImagesReq) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

func (x *GetUserImagesReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// TODO
type GetUserImagesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Files []*UserFile `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *GetUserImagesRes) Reset() {
	*x = GetUserImagesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserImagesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserImagesRes) ProtoMessage() {}

func (x *GetUserImagesRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserImagesRes.ProtoReflect.Descriptor instead.
func (*GetUserImagesRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserImagesRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetUserImagesRes) GetFiles() []*UserFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type RandomFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*UserFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *RandomFiles) Reset() {
	*x = RandomFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomFiles) ProtoMessage() {}

func (x *RandomFiles) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomFiles.ProtoReflect.Descriptor instead.
func (*RandomFiles) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{18}
}

func (x *RandomFiles) GetFiles() []*UserFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type GetLikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	//@inject_tag: form:"offset"
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty" form:"offset"`
	//@inject_tag: form:"limit"
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty" form:"limit"`
	//@inject_tag: form:"desc"
	Desc bool `protobuf:"varint,4,opt,name=desc,proto3" json:"desc,omitempty" form:"desc"`
}

func (x *GetLikesReq) Reset() {
	*x = GetLikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikesReq) ProtoMessage() {}

func (x *GetLikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikesReq.ProtoReflect.Descriptor instead.
func (*GetLikesReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{19}
}

func (x *GetLikesReq) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *GetLikesReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetLikesReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetLikesReq) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type GetLikesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total      int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	RedisFiles []*UserFile `protobuf:"bytes,2,rep,name=redisFiles,proto3" json:"redisFiles,omitempty"`
	DbFiles    []*UserFile `protobuf:"bytes,3,rep,name=dbFiles,proto3" json:"dbFiles,omitempty"`
}

func (x *GetLikesRes) Reset() {
	*x = GetLikesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikesRes) ProtoMessage() {}

func (x *GetLikesRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikesRes.ProtoReflect.Descriptor instead.
func (*GetLikesRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{20}
}

func (x *GetLikesRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetLikesRes) GetRedisFiles() []*UserFile {
	if x != nil {
		return x.RedisFiles
	}
	return nil
}

func (x *GetLikesRes) GetDbFiles() []*UserFile {
	if x != nil {
		return x.DbFiles
	}
	return nil
}

// Signin User
type FileLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	//@inject_tag: form:"file_id" binding:"required"
	Fileid string `protobuf:"bytes,2,opt,name=fileid,proto3" json:"fileid,omitempty" form:"file_id" binding:"required"`
	//@inject_tag: form:"dislike"
	Dislike bool `protobuf:"varint,3,opt,name=dislike,proto3" json:"dislike,omitempty" form:"dislike"`
}

func (x *FileLikeReq) Reset() {
	*x = FileLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLikeReq) ProtoMessage() {}

func (x *FileLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLikeReq.ProtoReflect.Descriptor instead.
func (*FileLikeReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{21}
}

func (x *FileLikeReq) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *FileLikeReq) GetFileid() string {
	if x != nil {
		return x.Fileid
	}
	return ""
}

func (x *FileLikeReq) GetDislike() bool {
	if x != nil {
		return x.Dislike
	}
	return false
}

// RPC
type GetUserTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: form:"user_id" binding:"required"
	Userid string `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty" form:"user_id" binding:"required"`
}

func (x *GetUserTokenReq) Reset() {
	*x = GetUserTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTokenReq) ProtoMessage() {}

func (x *GetUserTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTokenReq.ProtoReflect.Descriptor instead.
func (*GetUserTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{22}
}

func (x *GetUserTokenReq) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

type HotLikeRankList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*UserFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *HotLikeRankList) Reset() {
	*x = HotLikeRankList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotLikeRankList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotLikeRankList) ProtoMessage() {}

func (x *HotLikeRankList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotLikeRankList.ProtoReflect.Descriptor instead.
func (*HotLikeRankList) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{23}
}

func (x *HotLikeRankList) GetFiles() []*UserFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type DeleteUserFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: form:"userName"
	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty" form:"userName"`
	//@inject_tag: form:"file_id"
	FileID string `protobuf:"bytes,2,opt,name=fileID,proto3" json:"fileID,omitempty" form:"file_id"`
}

func (x *DeleteUserFileReq) Reset() {
	*x = DeleteUserFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserFileReq) ProtoMessage() {}

func (x *DeleteUserFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserFileReq.ProtoReflect.Descriptor instead.
func (*DeleteUserFileReq) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteUserFileReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *DeleteUserFileReq) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

type DeleteUserFileRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succ bool   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteUserFileRes) Reset() {
	*x = DeleteUserFileRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_file_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserFileRes) ProtoMessage() {}

func (x *DeleteUserFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserFileRes.ProtoReflect.Descriptor instead.
func (*DeleteUserFileRes) Descriptor() ([]byte, []int) {
	return file_proto_file_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteUserFileRes) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *DeleteUserFileRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_proto_file_proto protoreflect.FileDescriptor

var file_proto_file_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x17, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x12, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x90, 0x02, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x52, 0x4c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6b, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x22, 0x42, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x20, 0x0a, 0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x53, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x37, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75,
	0x63, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x22,
	0x35, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x73, 0x75, 0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x26, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x6b,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75,
	0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x72, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x67, 0x72, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x75,
	0x72, 0x53, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x6c, 0x75,
	0x72, 0x53, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x7f, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75,
	0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x14,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x2b, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x53, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75,
	0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x0b,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xa3, 0x01,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x64, 0x62, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x64, 0x62, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x22, 0x29, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x0f, 0x48, 0x6f, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x39, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x73, 0x75, 0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xe2, 0x0b, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x65,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x29, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x71, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x6e, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67,
	0x12, 0x17, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x1a, 0x17, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f,
	0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x26, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x12, 0x5c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x26,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x59,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x5d, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x6f, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x0d, 0x4c, 0x69, 0x6b, 0x65, 0x4f, 0x72,
	0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x68, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x2a, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_file_proto_rawDescOnce sync.Once
	file_proto_file_proto_rawDescData = file_proto_file_proto_rawDesc
)

func file_proto_file_proto_rawDescGZIP() []byte {
	file_proto_file_proto_rawDescOnce.Do(func() {
		file_proto_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_file_proto_rawDescData)
	})
	return file_proto_file_proto_rawDescData
}

var file_proto_file_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_proto_file_proto_goTypes = []interface{}{
	(*UserFile)(nil),             // 0: kira.micro.service.file.UserFile
	(*TokenUserReq)(nil),         // 1: kira.micro.service.file.TokenUserReq
	(*TokenUserRes)(nil),         // 2: kira.micro.service.file.TokenUserRes
	(*TokenReq)(nil),             // 3: kira.micro.service.file.TokenReq
	(*GetHistoryReq)(nil),        // 4: kira.micro.service.file.GetHistoryReq
	(*GetHistoryRes)(nil),        // 5: kira.micro.service.file.GetHistoryRes
	(*DeleteFileReq)(nil),        // 6: kira.micro.service.file.DeleteFileReq
	(*DeleteFileRes)(nil),        // 7: kira.micro.service.file.DeleteFileRes
	(*GetDetailReq)(nil),         // 8: kira.micro.service.file.GetDetailReq
	(*GetDetailRes)(nil),         // 9: kira.micro.service.file.GetDetailRes
	(*GetImageReq)(nil),          // 10: kira.micro.service.file.GetImageReq
	(*GetImageRes)(nil),          // 11: kira.micro.service.file.GetImageRes
	(*ChangeTokenStatusReq)(nil), // 12: kira.micro.service.file.ChangeTokenStatusReq
	(*ChangeTokenStatusRes)(nil), // 13: kira.micro.service.file.ChangeTokenStatusRes
	(*CheckTokenStatusReq)(nil),  // 14: kira.micro.service.file.CheckTokenStatusReq
	(*CheckTokenStatusRes)(nil),  // 15: kira.micro.service.file.CheckTokenStatusRes
	(*GetUserImagesReq)(nil),     // 16: kira.micro.service.file.GetUserImagesReq
	(*GetUserImagesRes)(nil),     // 17: kira.micro.service.file.GetUserImagesRes
	(*RandomFiles)(nil),          // 18: kira.micro.service.file.RandomFiles
	(*GetLikesReq)(nil),          // 19: kira.micro.service.file.GetLikesReq
	(*GetLikesRes)(nil),          // 20: kira.micro.service.file.GetLikesRes
	(*FileLikeReq)(nil),          // 21: kira.micro.service.file.FileLikeReq
	(*GetUserTokenReq)(nil),      // 22: kira.micro.service.file.GetUserTokenReq
	(*HotLikeRankList)(nil),      // 23: kira.micro.service.file.HotLikeRankList
	(*DeleteUserFileReq)(nil),    // 24: kira.micro.service.file.DeleteUserFileReq
	(*DeleteUserFileRes)(nil),    // 25: kira.micro.service.file.DeleteUserFileRes
	(*Ping)(nil),                 // 26: kira.micro.common.Ping
	(*Pong)(nil),                 // 27: kira.micro.common.Pong
	(*Response)(nil),             // 28: kira.micro.common.Response
}
var file_proto_file_proto_depIdxs = []int32{
	0,  // 0: kira.micro.service.file.GetHistoryRes.files:type_name -> kira.micro.service.file.UserFile
	0,  // 1: kira.micro.service.file.GetDetailRes.file:type_name -> kira.micro.service.file.UserFile
	0,  // 2: kira.micro.service.file.GetUserImagesRes.files:type_name -> kira.micro.service.file.UserFile
	0,  // 3: kira.micro.service.file.RandomFiles.files:type_name -> kira.micro.service.file.UserFile
	0,  // 4: kira.micro.service.file.GetLikesRes.redisFiles:type_name -> kira.micro.service.file.UserFile
	0,  // 5: kira.micro.service.file.GetLikesRes.dbFiles:type_name -> kira.micro.service.file.UserFile
	0,  // 6: kira.micro.service.file.HotLikeRankList.files:type_name -> kira.micro.service.file.UserFile
	1,  // 7: kira.micro.service.file.FileService.GenerateToken:input_type -> kira.micro.service.file.TokenUserReq
	10, // 8: kira.micro.service.file.FileService.GetImage:input_type -> kira.micro.service.file.GetImageReq
	16, // 9: kira.micro.service.file.FileService.GetUserImages:input_type -> kira.micro.service.file.GetUserImagesReq
	12, // 10: kira.micro.service.file.FileService.ChangeTokenStatus:input_type -> kira.micro.service.file.ChangeTokenStatusReq
	14, // 11: kira.micro.service.file.FileService.CheckTokenStatus:input_type -> kira.micro.service.file.CheckTokenStatusReq
	26, // 12: kira.micro.service.file.FileService.Ping:input_type -> kira.micro.common.Ping
	4,  // 13: kira.micro.service.file.FileService.GetHistory:input_type -> kira.micro.service.file.GetHistoryReq
	6,  // 14: kira.micro.service.file.FileService.DeleteFile:input_type -> kira.micro.service.file.DeleteFileReq
	8,  // 15: kira.micro.service.file.FileService.GetDetail:input_type -> kira.micro.service.file.GetDetailReq
	3,  // 16: kira.micro.service.file.FileService.RefreshToken:input_type -> kira.micro.service.file.TokenReq
	3,  // 17: kira.micro.service.file.FileService.GetRandomFile:input_type -> kira.micro.service.file.TokenReq
	3,  // 18: kira.micro.service.file.FileService.GetHotLikeRank:input_type -> kira.micro.service.file.TokenReq
	1,  // 19: kira.micro.service.file.FileService.GetToken:input_type -> kira.micro.service.file.TokenUserReq
	21, // 20: kira.micro.service.file.FileService.LikeOrDislike:input_type -> kira.micro.service.file.FileLikeReq
	19, // 21: kira.micro.service.file.FileService.GetLikes:input_type -> kira.micro.service.file.GetLikesReq
	24, // 22: kira.micro.service.file.FileService.DeleteUserFile:input_type -> kira.micro.service.file.DeleteUserFileReq
	2,  // 23: kira.micro.service.file.FileService.GenerateToken:output_type -> kira.micro.service.file.TokenUserRes
	11, // 24: kira.micro.service.file.FileService.GetImage:output_type -> kira.micro.service.file.GetImageRes
	17, // 25: kira.micro.service.file.FileService.GetUserImages:output_type -> kira.micro.service.file.GetUserImagesRes
	13, // 26: kira.micro.service.file.FileService.ChangeTokenStatus:output_type -> kira.micro.service.file.ChangeTokenStatusRes
	15, // 27: kira.micro.service.file.FileService.CheckTokenStatus:output_type -> kira.micro.service.file.CheckTokenStatusRes
	27, // 28: kira.micro.service.file.FileService.Ping:output_type -> kira.micro.common.Pong
	5,  // 29: kira.micro.service.file.FileService.GetHistory:output_type -> kira.micro.service.file.GetHistoryRes
	7,  // 30: kira.micro.service.file.FileService.DeleteFile:output_type -> kira.micro.service.file.DeleteFileRes
	9,  // 31: kira.micro.service.file.FileService.GetDetail:output_type -> kira.micro.service.file.GetDetailRes
	2,  // 32: kira.micro.service.file.FileService.RefreshToken:output_type -> kira.micro.service.file.TokenUserRes
	18, // 33: kira.micro.service.file.FileService.GetRandomFile:output_type -> kira.micro.service.file.RandomFiles
	23, // 34: kira.micro.service.file.FileService.GetHotLikeRank:output_type -> kira.micro.service.file.HotLikeRankList
	2,  // 35: kira.micro.service.file.FileService.GetToken:output_type -> kira.micro.service.file.TokenUserRes
	28, // 36: kira.micro.service.file.FileService.LikeOrDislike:output_type -> kira.micro.common.Response
	20, // 37: kira.micro.service.file.FileService.GetLikes:output_type -> kira.micro.service.file.GetLikesRes
	25, // 38: kira.micro.service.file.FileService.DeleteUserFile:output_type -> kira.micro.service.file.DeleteUserFileRes
	23, // [23:39] is the sub-list for method output_type
	7,  // [7:23] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_file_proto_init() }
func file_proto_file_proto_init() {
	if File_proto_file_proto != nil {
		return
	}
	file_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTokenStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTokenStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTokenStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTokenStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserImagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserImagesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotLikeRankList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_file_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserFileRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_file_proto_goTypes,
		DependencyIndexes: file_proto_file_proto_depIdxs,
		MessageInfos:      file_proto_file_proto_msgTypes,
	}.Build()
	File_proto_file_proto = out.File
	file_proto_file_proto_rawDesc = nil
	file_proto_file_proto_goTypes = nil
	file_proto_file_proto_depIdxs = nil
}
